# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
# image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - env/

# before_script:
#   - python -V  # Print out python version for debugging
#   - pip install virtualenv
#   - virtualenv env
#   - source env/bin/activate

test:f90:
  image: python:latest
  coverage: '/^TOTAL.+?(\d+\%)$/'
  script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv env
  - source env/bin/activate
  - pip install -r requirements.txt
  - apt-get update
  - apt-get -q -q -y install g++ gfortran
  - apt-get -q -q -y install python3
  - apt-get -q -q -y install python3-pip
  - python3 -V  # Print out python version for debugging
  - rm -rf env/
  - pip3 install virtualenv
  - virtualenv env
  - source env/bin/activate
  - pip install -r requirements.txt
  - pip install coverage
  - pip install .
  # - cd atooms/postprocessing
  # - f2py -c -m realspace_wrap realspace.f90
  # - f2py -c -m fourierspace_wrap fourierspace.f90
  # - cd ../../
  - make coverage
  # - coverage run --source atooms -m unittest discover -s tests
  # - coverage report -m

pages:
  artifacts:
    paths:
      - public
  scripts:
    echo
  only:
    - master
