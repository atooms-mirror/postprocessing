# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
# image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - env/

before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv env
  - source env/bin/activate
  - pip install -r requirements.txt

.test:
  script:
    - pip install coverage
    - coverage run --source atooms -m unittest discover -s tests
    # Backends tests are skipped, thus we do not include them in coverage
    - coverage report -m
  artifacts:
    paths:
      - .coverage
  coverage: '/^TOTAL.+?(\d+\%)$/'

test:2.7:
  image: python:2.7
  extends: .test

test:3.6:
  image: python:3.6
  extends: .test

test:latest:
  image: python:latest
  extends: .test

# .run:
#   script:
#     - python setup.py bdist_wheel
#     # an alternative approach is to install and run:
#     - pip install dist/*
#     # run the command here
#   artifacts:
#     paths:
#       - dist/*.whl

# run:2.7:
#   image: python:2.7
#   extends: .run

# run:3.6:
#   image: python:3.6
#   extends: .run

# run:latest:
#   image: python:latest
#   extends: .run

# pages:
#   script:
#     - pip install sphinx sphinx-rtd-theme
#     - cd doc ; make html
#     - mv build/html/ ../public/
#   artifacts:
#     paths:
#       - public
#   only:
#     - master
